MERCURY POSIX
-------------

These are the release notes for Mercury POSIX (as of 09/18/2013).

WHAT IS MERCURY POSIX?

   Mercury POSIX is a lightweight library that allows redirection
   of POSIX I/O calls to a remote server by using the Mercury RPC layer.

   Please see the accompanying COPYING file for license details.

ARCHITECTURES SUPPORTED:

   Mercury POSIX supports 32 and 64-bit Linux platforms. Network transports
   supported by the Mercury RPC layer are supported by Mercury POSIX.
   Please note, however, that the Mercury MPI transport does not provide
   flexibility for dynamic connection/disconnection and is therefore not
   recommended. Please refer to the Mercury documentation for more details.

DOCUMENTATION:

 - Please see the accompanying design implementation documentation for
   additional and useful details.

 - Environment variables:
     MERCURY_NA_PLUGIN:
     Underlying network transport method used to forward calls to the remote
     server.
     E.g. "bmi"

     MERCURY_PORT_NAME:
     Port name information (IP/port) used to establish a connection with a 
     remote server -- specific to the network transport chosen.
     E.g. "tcp://127.0.0.1:22222"

SOFTWARE REQUIREMENTS:

   Compiling and running Mercury POSIX requires up-to-date versions of various
   software packages. Beware that using excessively old versions of these
   packages can cause indirect errors that are very difficult to track down.
   Mercury POSIX requires a _well-configured_ Mercury package with BOOST_PP
   option (Boost preprocessor library) turned on.

BUILDING:

 - If you install the full sources, put the tarball in a directory where you
   have permissions (e.g., your home directory) and unpack it:

     gzip -cd mercury_posix-X.tar.gz | tar xvf -

   or

     bzip2 -dc mercury_posix-X.tar.bz2 | tar xvf -

   Replace "X" with the version number of the package.

 - Mercury POSIX makes use of the CMake build-system and requires that you do
   an out-of-source build. In order to do that, you must create a new build
   directory and run the 'ccmake' command from it:

     cd mercury_posix-X
     mkdir build
     cd build
     ccmake .. (where ".." is the relative path to the mercury_posix-X
     directory)

 - Type 'c' multiple times and choose suitable options. Recommended options
   are:

     BUILD_SHARED_LIBS                ON (for dynamic redirection)
     BUILD_TESTING                    ON
     CMAKE_INSTALL_PREFIX             /path/to/install/directory
     MERCURY_POSIX_ENABLE_LARGE_FILE  ON
     MERCURY_POSIX_ENABLE_SERVER_LOG  ON (for printing log messages on server)
     mercury_DIR                      /path/to/mercury/install/share/cmake/mercury

   Setting include directory and library paths may require you to toggle to
   the advanced mode by typing 't'. Once you are done and do not see any
   errors, type 'g' to generate makefiles. Once you exit the CMake
   configuration screen and are ready to build the targets, do:

      make

 - (Optional) Verbose compile/build output:

   This is done by inserting "VERBOSE=1" in the "make" command. E.g.:

     make VERBOSE=1

INSTALLING:

 - Assuming that the CMAKE_INSTALL_PREFIX has been set (see previous step)
   and that you have write permissions to the destination directory, do
   from the build directory:
   
     make install
     
TESTING:

 - Open a terminal, start a server:
     mercury_posix_server bmi
   or:
     mpirun -np 1 mercury_posix_server mpi

 - Open a second terminal, export MERCURY_PORT_NAME and MERCURY_NA_PLUGIN:
     export MERCURY_NA_PLUGIN="bmi"
     export MERCURY_PORT_NAME="tcp://127.0.0.1:22222"
   or
     export MERCURY_NA_PLUGIN="mpi"
     export MERCURY_PORT_NAME="string generated by mercury_posix_server in port.cfg"

 - In the same terminal, export LD_PRELOAD and launch the posix client test:
     export LD_PRELOAD=/path/to/mercury_posix/lib/libmercury_posix.so

     ./client_posix
   or:
     mpirun -np 1 ./client_posix
