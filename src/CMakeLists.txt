#------------------------------------------------------------------------------
# External dependencies
#------------------------------------------------------------------------------
# Mercury
find_package(mercury REQUIRED)
if(mercury_FOUND)
  include_directories(${MERCURY_INCLUDE_DIR})
  if(NOT ${MERCURY_USE_BOOST_PP})
    message(FATAL_ERROR "Mercury POSIX requires Mercury to be built with USE_BOOST_PP option ON.")
  endif()
else()
  message(FATAL_ERROR "Could not find Boost, please check Boost_INCLUDE_DIR.")
endif()

#------------------------------------------------------------------------------
# Server log.
#------------------------------------------------------------------------------
option(MERCURY_POSIX_ENABLE_SERVER_LOG "Print log messages on server." ON)
if(MERCURY_POSIX_ENABLE_SERVER_LOG)
  set(HG_POSIX_HAS_SERVER_LOG 1)
else()
  set(HG_POSIX_HAS_SERVER_LOG 0)
endif()

#------------------------------------------------------------------------------
# Large file support.
#------------------------------------------------------------------------------
option(MERCURY_POSIX_ENABLE_LARGE_FILE "Enable support for large (64-bit) files on Linux." ON)
if(MERCURY_POSIX_ENABLE_LARGE_FILE)
  set(HG_POSIX_HAS_LARGE_FILE 1)
  set(MERCURY_POSIX_LARGE_FILE_DEF
    -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE)
  add_definitions(${MERCURY_POSIX_LARGE_FILE_DEF})
  # required for internal cmake tests
  set(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS} ${MERCURY_POSIX_LARGE_FILE_DEF})
else()
  set(HG_POSIX_HAS_LARGE_FILE 0)
endif()

# Set MERCURY_POSIX_DEF for building tests
set(MERCURY_POSIX_DEF ${MERCURY_POSIX_LARGE_FILE_DEF} PARENT_SCOPE)

# Cache HG_POSIX_HAS_LARGE_FILE
if(NOT (DEFINED HG_POSIX_HAS_LARGE_FILE_CACHED))
  set(HG_POSIX_HAS_LARGE_FILE_CACHED ${HG_POSIX_HAS_LARGE_FILE}
    CACHE INTERNAL "Cached variable: HG_POSIX_HAS_LARGE_FILE")
endif()

# If HG_POSIX_HAS_LARGE_FILE does not match cached variable run tests again
if(NOT (${HG_POSIX_HAS_LARGE_FILE} EQUAL ${HG_POSIX_HAS_LARGE_FILE_CACHED}))
  set(HG_POSIX_HAS_LARGE_FILE_CACHED ${HG_POSIX_HAS_LARGE_FILE}
    CACHE INTERNAL "Cached variable: HG_POSIX_HAS_LARGE_FILE")
  unset(HAVE_HG_POSIX_SIZEOF_OFF_T   CACHE)
  unset(HAVE_HG_POSIX_SIZEOF_OFF64_T CACHE)
  unset(HG_POSIX_SIZEOF_OFF64_T CACHE)
endif()

#------------------------------------------------------------------------------
# Check type sizes.
#------------------------------------------------------------------------------
include(CheckTypeSize)

check_type_size(off_t   HG_POSIX_SIZEOF_OFF_T)
check_type_size(off64_t HG_POSIX_SIZEOF_OFF64_T)
if(NOT HG_POSIX_SIZEOF_OFF64_T)
  set(HG_POSIX_SIZEOF_OFF64_T 0)
endif()
#
if(HG_POSIX_SIZEOF_OFF64_T OR (HG_POSIX_SIZEOF_OFF_T EQUAL 8))
  set(HG_POSIX_HAS_OFF64_T 1)
else()
  set(HG_POSIX_HAS_OFF64_T 0)
endif()

#------------------------------------------------------------------------------
# Check if functions exist.
#------------------------------------------------------------------------------
include(CheckFunctionExists)

if(MERCURY_POSIX_ENABLE_LARGE_FILE)
  check_function_exists(creat64     HG_POSIX_HAS_CREAT64)
  check_function_exists(ftruncate64 HG_POSIX_HAS_FTRUNCATE64)
  check_function_exists(lseek64     HG_POSIX_HAS_LSEEK64)
  check_function_exists(open64      HG_POSIX_HAS_OPEN64)
  check_function_exists(pread64     HG_POSIX_HAS_PREAD64)
  check_function_exists(pwrite64    HG_POSIX_HAS_PWRITE64)
  check_function_exists(truncate64  HG_POSIX_HAS_TRUNCATE64)
  check_function_exists(fstat64     HG_POSIX_HAS_FSTAT64)
  check_function_exists(stat64      HG_POSIX_HAS_STAT64)
  check_function_exists(lstat64     HG_POSIX_HAS_LSTAT64)
else()
  set(HG_POSIX_HAS_CREAT64 0)
  set(HG_POSIX_HAS_FTRUNCATE64 0)
  set(HG_POSIX_HAS_LSEEK64 0)
  set(HG_POSIX_HAS_OPEN64 0)
  set(HG_POSIX_HAS_PREAD64 0)
  set(HG_POSIX_HAS_PWRITE64 0)
  set(HG_POSIX_HAS_TRUNCATE64 0)
  set(HG_POSIX_HAS_FSTAT64 0)
  set(HG_POSIX_HAS_STAT64 0)
  set(HG_POSIX_HAS_LSTAT64 0)
endif()

#------------------------------------------------------------------------------
# Configure module header files
#------------------------------------------------------------------------------
# Set unique var used in the autogenerated config file (symbol import/export)
if(BUILD_SHARED_LIBS)
  set(HG_POSIX_BUILD_SHARED_LIBS 1)
  set(MERCURY_POSIX_LIBTYPE SHARED)
else()
  set(HG_POSIX_BUILD_SHARED_LIBS 0)
  set(MERCURY_POSIX_LIBTYPE STATIC)
endif()

configure_file(
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_posix_config.h.in
  ${CMAKE_CURRENT_BINARY_DIR}/mercury_posix_config.h
)

# Used by config.cmake.build.in and Testing
set(MERCURY_POSIX_INCLUDES_BUILD_TIME
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${MERCURY_INCLUDE_DIR}
  PARENT_SCOPE
)

# Used by config.cmake.install.in
set(MERCURY_POSIX_INCLUDES_INSTALL_TIME
  ${MERCURY_POSIX_INSTALL_INCLUDE_DIR}
  ${MERCURY_INCLUDE_DIR}
  PARENT_SCOPE
)

#------------------------------------------------------------------------------
# Set sources
#------------------------------------------------------------------------------
include_directories(
  ${CMAKE_CURRENT_SOURCE_DIR}
  ${CMAKE_CURRENT_BINARY_DIR}
  ${MERCURY_POSIX_INCLUDES_BUILD_TIME}
  )

set(MERCURY_POSIX_SRCS
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_posix.c
)

#----------------------------------------------------------------------------
# Libraries
#----------------------------------------------------------------------------
# mercury_posix
add_library(mercury_posix ${MERCURY_POSIX_SRCS})
target_link_libraries(mercury_posix mercury -ldl)
set_lib_options(mercury_posix "mercury_posix" ${MERCURY_POSIX_LIBTYPE})

set(MERCURY_EXPORTED_LIBS mercury_posix ${MERCURY_EXPORTED_LIBS})

#----------------------------------------------------------------------------
# Binaries
#----------------------------------------------------------------------------
# mercury_posix_server
add_executable(mercury_posix_server mercury_posix_server.c)
target_link_libraries(mercury_posix_server mercury)

#-----------------------------------------------------------------------------
# Specify project header files to be installed
#-----------------------------------------------------------------------------
set(MERCURY_POSIX_HEADERS
  ${CMAKE_CURRENT_SOURCE_DIR}/mercury_posix.h
)

#-----------------------------------------------------------------------------
# Add file(s) to CMake Install
#-----------------------------------------------------------------------------
install(
  FILES
    ${MERCURY_HEADERS}
  DESTINATION
    ${MERCURY_INSTALL_INCLUDE_DIR}
  COMPONENT
    headers
)

#---------------------------------------------------------------------------
# Add Target(s) to CMake Install
#---------------------------------------------------------------------------
install(
  TARGETS
    mercury_posix_server mercury_posix
  EXPORT
    ${MERCURY_POSIX_EXPORTED_TARGETS}
  LIBRARY DESTINATION ${MERCURY_POSIX_INSTALL_LIB_DIR}
  ARCHIVE DESTINATION ${MERCURY_POSIX_INSTALL_LIB_DIR}
  RUNTIME DESTINATION ${MERCURY_POSIX_INSTALL_BIN_DIR}
)

#-----------------------------------------------------------------------------
# Add Target(s) to CMake Install for import into other projects
#-----------------------------------------------------------------------------
install(
  EXPORT
    ${MERCURY_POSIX_EXPORTED_TARGETS}
  DESTINATION
    ${MERCURY_POSIX_INSTALL_DATA_DIR}/cmake/mercury_posix
  FILE
    ${MERCURY_POSIX_EXPORTED_TARGETS}.cmake
)

#-----------------------------------------------------------------------------
# Export all exported targets to the build tree for use by parent project
#-----------------------------------------------------------------------------
EXPORT (
  TARGETS
    ${MERCURY_POSIX_EXPORTED_LIBS}
  FILE
    ${MERCURY_POSIX_EXPORTED_TARGETS}.cmake
)
